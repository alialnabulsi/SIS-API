<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <meta name="description" content="University of Balamand Secure Login Portal">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Jost:wght@400;500;600&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <title>University of Balamand - Secure Login</title>
  <style>
    :root {
      --primary-color: #5a2d9a;
      --primary-light: #6d44b8;
      --primary-dark: #4a2580;
      --text-light: #f8f9fa;
      --text-dark: #212529;
      --bg-overlay: rgba(15, 12, 41, 0.85);
      --error-color: #e63946;
      --success-color: #2a9d8f;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Jost', sans-serif;
      background: url('/images/uni3.jpg') no-repeat center center fixed;
      background-size: cover;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
      position: relative;
      color: var(--text-light);
      line-height: 1.6;
    }

    body::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--bg-overlay);
      z-index: -1;
    }

    .main {
      width: 100%;
      max-width: 460px;
      min-height: 600px;
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 40px 30px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      transition: all 0.3s ease;
    }

    .logo-container {
      margin-bottom: 30px;
      text-align: center;
    }

    .logo {
      width: 120px;
      height: auto;
      margin-bottom: 10px;
    }

    .university-name {
      font-size: 1.2rem;
      font-weight: 600;
      color: white;
      margin-top: 8px;
    }

    .message-box {
      width: 100%;
      height: 80px;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      margin-bottom: 30px;
      position: relative;
    }

    .message-box span {
      position: absolute;
      opacity: 0;
      white-space: normal;
      transition: opacity 0.6s ease-in-out, transform 0.6s ease;
      width: 100%;
      padding: 0 10px;
      transform: translateY(10px);
      font-size: 1.1rem;
      line-height: 1.5;
    }

    .message-box span.active {
      opacity: 1;
      transform: translateY(0);
    }

    .form-box {
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    form {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .input-group {
      position: relative;
      width: 100%;
    }

    label {
      position: absolute;
      left: 15px;
      top: 15px;
      color: var(--text-dark);
      background-color: rgba(255, 255, 255, 0.95);
      padding: 0 5px;
      font-size: 0.9rem;
      pointer-events: none;
      transition: all 0.3s ease;
    }

    input[type="email"],
    input[type="password"] {
      width: 100%;
      height: 50px;
      padding: 15px;
      border: 2px solid transparent;
      border-radius: 8px;
      font-size: 1rem;
      background-color: rgba(255, 255, 255, 0.95);
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    input[type="email"]:focus,
    input[type="password"]:focus {
      outline: none;
      border-color: var(--primary-light);
      box-shadow: 0 4px 12px rgba(106, 70, 184, 0.2);
      background-color: #fff;
    }

    input:focus + label,
    input:not(:placeholder-shown) + label {
      top: -10px;
      left: 10px;
      font-size: 0.8rem;
      color: var(--primary-dark);
      background-color: white;
    }

    button {
      width: 100%;
      height: 50px;
      background: linear-gradient(135deg, var(--primary-light), var(--primary-dark));
      border: none;
      border-radius: 8px;
      color: #fff;
      font-weight: 600;
      font-size: 1rem;
      cursor: pointer;
      box-shadow: 0 4px 15px rgba(106, 70, 184, 0.4);
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    button:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(106, 70, 184, 0.5);
    }

    button:active {
      transform: translateY(0);
    }

    button::after {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      width: 50%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
      );
      transition: left 0.7s ease-in-out;
    }

    button:hover::after {
      left: 150%;
    }

    .loading {
      position: relative;
      pointer-events: none;
    }

    .loading::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: inherit;
      border-radius: inherit;
    }

    .loading::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 20px;
      height: 20px;
      margin: -10px 0 0 -10px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top-color: white;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .footer-links {
      margin-top: 30px;
      text-align: center;
      font-size: 0.9rem;
    }

    .footer-links a {
      color: rgba(255, 255, 255, 0.7);
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .footer-links a:hover {
      color: white;
      text-decoration: underline;
    }

    .footer-links span {
      margin: 0 10px;
      color: rgba(255, 255, 255, 0.3);
    }

    .error-message {
      color: var(--error-color);
      font-size: 0.9rem;
      margin-top: -15px;
      text-align: left;
      width: 100%;
      display: none;
    }

    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background: rgba(30, 27, 57, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 12px;
      padding: 30px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .modal-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: white;
    }

    .close-modal {
      background: none;
      border: none;
      color: rgba(255, 255, 255, 0.7);
      font-size: 1.5rem;
      cursor: pointer;
      transition: color 0.3s;
    }

    .close-modal:hover {
      color: white;
    }

    .modal-body {
      margin-bottom: 20px;
      color: rgba(255, 255, 255, 0.9);
    }

    .modal-footer {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
    }

    .modal-btn {
      padding: 10px 20px;
      border-radius: 6px;
      border: none;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s;
    }

    .modal-btn-primary {
      background: var(--primary-light);
      color: white;
    }

    .modal-btn-primary:hover {
      background: var(--primary-dark);
    }

    .modal-btn-secondary {
      background: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .modal-btn-secondary:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    @media (max-width: 480px) {
      .main {
        padding: 30px 20px;
        min-height: 560px;
      }
      
      .logo {
        width: 100px;
      }

      .message-box {
        height: 70px;
        margin-bottom: 20px;
      }

      form {
        gap: 15px;
      }

      .modal-content {
        padding: 20px;
      }
    }
  </style>
</head>
<body>
  <div class="main">
    <div class="logo-container">
      <img class="logo" src="/images/BalamandLogo.png" alt="University of Balamand Logo" />
      <div class="university-name">University of Balamand</div>
    </div>

    <div class="message-box">
      <span class="active">Secure Login Portal</span>
      <span>For authorized university personnel and students only</span>
      <span>Please use your institutional credentials</span>
    </div>

    <div class="form-box">
      <form id="loginForm" action="/api/sis/user/login" method="POST">
        <input type="hidden" name="_csrf" value="<!-- Server should insert CSRF token here -->">
        
        <div class="input-group">
          <input type="email" name="email" id="email" placeholder=" " required />
          <label for="email">University Email</label>
        </div>
        <div class="error-message" id="email-error"></div>
        
        <div class="input-group">
          <input type="password" name="password" id="password" placeholder=" " required />
          <label for="password">Password</label>
        </div>
        <div class="error-message" id="password-error"></div>
        
        <button type="submit" id="submitBtn">
          <span>LOGIN</span>
        </button>
      </form>
    </div>

    <div class="footer-links">
      <a href="#" id="forgotPasswordLink">Forgot Password?</a>
      <span>|</span>
      <a href="#" id="needHelpLink">Need Help?</a>
    </div>
  </div>

  <!-- Forgot Password Modal -->
  <div class="modal" id="forgotPasswordModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Reset Your Password</h3>
        <button class="close-modal">&times;</button>
      </div>
      <div class="modal-body">
        <p>Enter your university email address and we'll send you a link to reset your password.</p>
        <div class="input-group" style="margin-top: 20px;">
          <input type="email" id="resetEmail" placeholder=" " required />
          <label for="resetEmail">University Email</label>
        </div>
        <div class="error-message" id="reset-email-error"></div>
      </div>
      <div class="modal-footer">
        <button class="modal-btn modal-btn-secondary close-modal">Cancel</button>
        <button class="modal-btn modal-btn-primary" id="sendResetLink">Send Reset Link</button>
      </div>
    </div>
  </div>

  <!-- Need Help Modal -->
  <div class="modal" id="needHelpModal">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Need Help?</h3>
        <button class="close-modal">&times;</button>
      </div>
      <div class="modal-body">
        <p>If you're having trouble accessing your account, please contact the IT Help Desk:</p>
        <ul style="margin: 15px 0; padding-left: 20px;">
          <li>Email: <a href="mailto:helpdesk@balamand.edu.lb" style="color: var(--primary-light);">helpdesk@balamand.edu.lb</a></li>
          <li>Phone: +961 6 930 250 ext. 5555</li>
          <li>Location: IT Building, Room 101</li>
        </ul>
        <p>Hours of operation: Sunday to Friday, 8:00 AM to 5:00 PM</p>
      </div>
      <div class="modal-footer">
        <button class="modal-btn modal-btn-secondary close-modal">Close</button>
      </div>
    </div>
  </div>

  <script>
    // Message rotation
    const messages = document.querySelectorAll('.message-box span');
    let current = 0;

    setInterval(() => {
      messages[current].classList.remove('active');
      current = (current + 1) % messages.length;
      messages[current].classList.add('active');
    }, 4000);

    // Modal functionality
    const forgotPasswordLink = document.getElementById('forgotPasswordLink');
    const needHelpLink = document.getElementById('needHelpLink');
    const forgotPasswordModal = document.getElementById('forgotPasswordModal');
    const needHelpModal = document.getElementById('needHelpModal');
    const closeModals = document.querySelectorAll('.close-modal');
    const sendResetLink = document.getElementById('sendResetLink');

    // Open modals
    forgotPasswordLink.addEventListener('click', (e) => {
      e.preventDefault();
      forgotPasswordModal.style.display = 'flex';
    });

    needHelpLink.addEventListener('click', (e) => {
      e.preventDefault();
      needHelpModal.style.display = 'flex';
    });

    // Close modals
    closeModals.forEach(btn => {
      btn.addEventListener('click', () => {
        forgotPasswordModal.style.display = 'none';
        needHelpModal.style.display = 'none';
      });
    });

    // Close when clicking outside modal content
    window.addEventListener('click', (e) => {
      if (e.target === forgotPasswordModal) {
        forgotPasswordModal.style.display = 'none';
      }
      if (e.target === needHelpModal) {
        needHelpModal.style.display = 'none';
      }
    });

    // Form validation
    const loginForm = document.getElementById('loginForm');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const emailError = document.getElementById('email-error');
    const passwordError = document.getElementById('password-error');

    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Reset errors
      emailError.style.display = 'none';
      passwordError.style.display = 'none';
      
      // Validate email
      if (!emailInput.value || !emailInput.value.includes('@')) {
        emailError.textContent = 'Please enter a valid university email';
        emailError.style.display = 'block';
        return;
      }
      
      // Validate password
      if (!passwordInput.value || passwordInput.value.length < 8) {
        passwordError.textContent = 'Password must be at least 8 characters';
        passwordError.style.display = 'block';
        return;
      }
      
      // Show loading state
      const submitBtn = document.getElementById('submitBtn');
      submitBtn.classList.add('loading');
      submitBtn.innerHTML = '';
      
      try {
        // Simulate API call (replace with actual fetch)
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        // For demo purposes - in real app, handle actual response
        loginForm.submit();
      } catch (error) {
        // Handle error response
        emailError.textContent = 'Invalid email or password';
        emailError.style.display = 'block';
        passwordError.textContent = 'Invalid email or password';
        passwordError.style.display = 'block';
      } finally {
        submitBtn.classList.remove('loading');
        submitBtn.innerHTML = '<span>LOGIN</span>';
      }
    });

    // Forgot password form
    sendResetLink.addEventListener('click', async () => {
      const resetEmail = document.getElementById('resetEmail');
      const resetEmailError = document.getElementById('reset-email-error');
      
      resetEmailError.style.display = 'none';
      
      if (!resetEmail.value || !resetEmail.value.includes('@')) {
        resetEmailError.textContent = 'Please enter a valid university email';
        resetEmailError.style.display = 'block';
        return;
      }
      
      sendResetLink.textContent = 'Sending...';
      sendResetLink.disabled = true;
      
      try {
        // Simulate API call
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // Show success message
        const modalBody = document.querySelector('#forgotPasswordModal .modal-body');
        modalBody.innerHTML = `
          <div style="text-align: center; padding: 20px 0;">
            <i class="fas fa-check-circle" style="font-size: 3rem; color: var(--success-color); margin-bottom: 15px;"></i>
            <h3 style="margin-bottom: 10px;">Reset Link Sent!</h3>
            <p>We've sent a password reset link to ${resetEmail.value}. Please check your email.</p>
          </div>
        `;
        
        document.querySelector('#forgotPasswordModal .modal-footer').style.display = 'none';
        
        setTimeout(() => {
          forgotPasswordModal.style.display = 'none';
          // Reset modal for next use
          modalBody.innerHTML = `
            <p>Enter your university email address and we'll send you a link to reset your password.</p>
            <div class="input-group" style="margin-top: 20px;">
              <input type="email" id="resetEmail" placeholder=" " required />
              <label for="resetEmail">University Email</label>
            </div>
            <div class="error-message" id="reset-email-error"></div>
          `;
          document.querySelector('#forgotPasswordModal .modal-footer').style.display = 'flex';
          resetEmail.value = '';
        }, 3000);
      } catch (error) {
        resetEmailError.textContent = 'Failed to send reset link. Please try again.';
        resetEmailError.style.display = 'block';
      } finally {
        sendResetLink.textContent = 'Send Reset Link';
        sendResetLink.disabled = false;
      }
    });
  </script>
</body>
</html>